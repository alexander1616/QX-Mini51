                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module interrupt
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _Key_INT3
                                     13 	.globl _Key_INT2
                                     14 	.globl _Key_INT1
                                     15 	.globl _Key_INT0
                                     16 	.globl _CY
                                     17 	.globl _AC
                                     18 	.globl _F0
                                     19 	.globl _RS1
                                     20 	.globl _RS0
                                     21 	.globl _OV
                                     22 	.globl _F1
                                     23 	.globl _P
                                     24 	.globl _PS
                                     25 	.globl _PT1
                                     26 	.globl _PX1
                                     27 	.globl _PT0
                                     28 	.globl _PX0
                                     29 	.globl _RD
                                     30 	.globl _WR
                                     31 	.globl _T1
                                     32 	.globl _T0
                                     33 	.globl _INT1
                                     34 	.globl _INT0
                                     35 	.globl _TXD
                                     36 	.globl _RXD
                                     37 	.globl _P3_7
                                     38 	.globl _P3_6
                                     39 	.globl _P3_5
                                     40 	.globl _P3_4
                                     41 	.globl _P3_3
                                     42 	.globl _P3_2
                                     43 	.globl _P3_1
                                     44 	.globl _P3_0
                                     45 	.globl _EA
                                     46 	.globl _ES
                                     47 	.globl _ET1
                                     48 	.globl _EX1
                                     49 	.globl _ET0
                                     50 	.globl _EX0
                                     51 	.globl _P2_7
                                     52 	.globl _P2_6
                                     53 	.globl _P2_5
                                     54 	.globl _P2_4
                                     55 	.globl _P2_3
                                     56 	.globl _P2_2
                                     57 	.globl _P2_1
                                     58 	.globl _P2_0
                                     59 	.globl _SM0
                                     60 	.globl _SM1
                                     61 	.globl _SM2
                                     62 	.globl _REN
                                     63 	.globl _TB8
                                     64 	.globl _RB8
                                     65 	.globl _TI
                                     66 	.globl _RI
                                     67 	.globl _P1_7
                                     68 	.globl _P1_6
                                     69 	.globl _P1_5
                                     70 	.globl _P1_4
                                     71 	.globl _P1_3
                                     72 	.globl _P1_2
                                     73 	.globl _P1_1
                                     74 	.globl _P1_0
                                     75 	.globl _TF1
                                     76 	.globl _TR1
                                     77 	.globl _TF0
                                     78 	.globl _TR0
                                     79 	.globl _IE1
                                     80 	.globl _IT1
                                     81 	.globl _IE0
                                     82 	.globl _IT0
                                     83 	.globl _P0_7
                                     84 	.globl _P0_6
                                     85 	.globl _P0_5
                                     86 	.globl _P0_4
                                     87 	.globl _P0_3
                                     88 	.globl _P0_2
                                     89 	.globl _P0_1
                                     90 	.globl _P0_0
                                     91 	.globl _B
                                     92 	.globl _ACC
                                     93 	.globl _PSW
                                     94 	.globl _IP
                                     95 	.globl _P3
                                     96 	.globl _IE
                                     97 	.globl _P2
                                     98 	.globl _SBUF
                                     99 	.globl _SCON
                                    100 	.globl _P1
                                    101 	.globl _TH1
                                    102 	.globl _TH0
                                    103 	.globl _TL1
                                    104 	.globl _TL0
                                    105 	.globl _TMOD
                                    106 	.globl _TCON
                                    107 	.globl _PCON
                                    108 	.globl _DPH
                                    109 	.globl _DPL
                                    110 	.globl _SP
                                    111 	.globl _P0
                                    112 ;--------------------------------------------------------
                                    113 ; special function registers
                                    114 ;--------------------------------------------------------
                                    115 	.area RSEG    (ABS,DATA)
      000000                        116 	.org 0x0000
                           000080   117 _P0	=	0x0080
                           000081   118 _SP	=	0x0081
                           000082   119 _DPL	=	0x0082
                           000083   120 _DPH	=	0x0083
                           000087   121 _PCON	=	0x0087
                           000088   122 _TCON	=	0x0088
                           000089   123 _TMOD	=	0x0089
                           00008A   124 _TL0	=	0x008a
                           00008B   125 _TL1	=	0x008b
                           00008C   126 _TH0	=	0x008c
                           00008D   127 _TH1	=	0x008d
                           000090   128 _P1	=	0x0090
                           000098   129 _SCON	=	0x0098
                           000099   130 _SBUF	=	0x0099
                           0000A0   131 _P2	=	0x00a0
                           0000A8   132 _IE	=	0x00a8
                           0000B0   133 _P3	=	0x00b0
                           0000B8   134 _IP	=	0x00b8
                           0000D0   135 _PSW	=	0x00d0
                           0000E0   136 _ACC	=	0x00e0
                           0000F0   137 _B	=	0x00f0
                                    138 ;--------------------------------------------------------
                                    139 ; special function bits
                                    140 ;--------------------------------------------------------
                                    141 	.area RSEG    (ABS,DATA)
      000000                        142 	.org 0x0000
                           000080   143 _P0_0	=	0x0080
                           000081   144 _P0_1	=	0x0081
                           000082   145 _P0_2	=	0x0082
                           000083   146 _P0_3	=	0x0083
                           000084   147 _P0_4	=	0x0084
                           000085   148 _P0_5	=	0x0085
                           000086   149 _P0_6	=	0x0086
                           000087   150 _P0_7	=	0x0087
                           000088   151 _IT0	=	0x0088
                           000089   152 _IE0	=	0x0089
                           00008A   153 _IT1	=	0x008a
                           00008B   154 _IE1	=	0x008b
                           00008C   155 _TR0	=	0x008c
                           00008D   156 _TF0	=	0x008d
                           00008E   157 _TR1	=	0x008e
                           00008F   158 _TF1	=	0x008f
                           000090   159 _P1_0	=	0x0090
                           000091   160 _P1_1	=	0x0091
                           000092   161 _P1_2	=	0x0092
                           000093   162 _P1_3	=	0x0093
                           000094   163 _P1_4	=	0x0094
                           000095   164 _P1_5	=	0x0095
                           000096   165 _P1_6	=	0x0096
                           000097   166 _P1_7	=	0x0097
                           000098   167 _RI	=	0x0098
                           000099   168 _TI	=	0x0099
                           00009A   169 _RB8	=	0x009a
                           00009B   170 _TB8	=	0x009b
                           00009C   171 _REN	=	0x009c
                           00009D   172 _SM2	=	0x009d
                           00009E   173 _SM1	=	0x009e
                           00009F   174 _SM0	=	0x009f
                           0000A0   175 _P2_0	=	0x00a0
                           0000A1   176 _P2_1	=	0x00a1
                           0000A2   177 _P2_2	=	0x00a2
                           0000A3   178 _P2_3	=	0x00a3
                           0000A4   179 _P2_4	=	0x00a4
                           0000A5   180 _P2_5	=	0x00a5
                           0000A6   181 _P2_6	=	0x00a6
                           0000A7   182 _P2_7	=	0x00a7
                           0000A8   183 _EX0	=	0x00a8
                           0000A9   184 _ET0	=	0x00a9
                           0000AA   185 _EX1	=	0x00aa
                           0000AB   186 _ET1	=	0x00ab
                           0000AC   187 _ES	=	0x00ac
                           0000AF   188 _EA	=	0x00af
                           0000B0   189 _P3_0	=	0x00b0
                           0000B1   190 _P3_1	=	0x00b1
                           0000B2   191 _P3_2	=	0x00b2
                           0000B3   192 _P3_3	=	0x00b3
                           0000B4   193 _P3_4	=	0x00b4
                           0000B5   194 _P3_5	=	0x00b5
                           0000B6   195 _P3_6	=	0x00b6
                           0000B7   196 _P3_7	=	0x00b7
                           0000B0   197 _RXD	=	0x00b0
                           0000B1   198 _TXD	=	0x00b1
                           0000B2   199 _INT0	=	0x00b2
                           0000B3   200 _INT1	=	0x00b3
                           0000B4   201 _T0	=	0x00b4
                           0000B5   202 _T1	=	0x00b5
                           0000B6   203 _WR	=	0x00b6
                           0000B7   204 _RD	=	0x00b7
                           0000B8   205 _PX0	=	0x00b8
                           0000B9   206 _PT0	=	0x00b9
                           0000BA   207 _PX1	=	0x00ba
                           0000BB   208 _PT1	=	0x00bb
                           0000BC   209 _PS	=	0x00bc
                           0000D0   210 _P	=	0x00d0
                           0000D1   211 _F1	=	0x00d1
                           0000D2   212 _OV	=	0x00d2
                           0000D3   213 _RS0	=	0x00d3
                           0000D4   214 _RS1	=	0x00d4
                           0000D5   215 _F0	=	0x00d5
                           0000D6   216 _AC	=	0x00d6
                           0000D7   217 _CY	=	0x00d7
                                    218 ;--------------------------------------------------------
                                    219 ; overlayable register banks
                                    220 ;--------------------------------------------------------
                                    221 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        222 	.ds 8
                                    223 	.area REG_BANK_1	(REL,OVR,DATA)
      000000                        224 	.ds 8
                                    225 ;--------------------------------------------------------
                                    226 ; internal ram data
                                    227 ;--------------------------------------------------------
                                    228 	.area DSEG    (DATA)
                                    229 ;--------------------------------------------------------
                                    230 ; overlayable items in internal ram 
                                    231 ;--------------------------------------------------------
                                    232 ;--------------------------------------------------------
                                    233 ; Stack segment in internal ram 
                                    234 ;--------------------------------------------------------
                                    235 	.area	SSEG
      000000                        236 __start__stack:
      000000                        237 	.ds	1
                                    238 
                                    239 ;--------------------------------------------------------
                                    240 ; indirectly addressable internal ram data
                                    241 ;--------------------------------------------------------
                                    242 	.area ISEG    (DATA)
                                    243 ;--------------------------------------------------------
                                    244 ; absolute internal ram data
                                    245 ;--------------------------------------------------------
                                    246 	.area IABS    (ABS,DATA)
                                    247 	.area IABS    (ABS,DATA)
                                    248 ;--------------------------------------------------------
                                    249 ; bit data
                                    250 ;--------------------------------------------------------
                                    251 	.area BSEG    (BIT)
                                    252 ;--------------------------------------------------------
                                    253 ; paged external ram data
                                    254 ;--------------------------------------------------------
                                    255 	.area PSEG    (PAG,XDATA)
                                    256 ;--------------------------------------------------------
                                    257 ; external ram data
                                    258 ;--------------------------------------------------------
                                    259 	.area XSEG    (XDATA)
                                    260 ;--------------------------------------------------------
                                    261 ; absolute external ram data
                                    262 ;--------------------------------------------------------
                                    263 	.area XABS    (ABS,XDATA)
                                    264 ;--------------------------------------------------------
                                    265 ; external initialized ram data
                                    266 ;--------------------------------------------------------
                                    267 	.area XISEG   (XDATA)
                                    268 	.area HOME    (CODE)
                                    269 	.area GSINIT0 (CODE)
                                    270 	.area GSINIT1 (CODE)
                                    271 	.area GSINIT2 (CODE)
                                    272 	.area GSINIT3 (CODE)
                                    273 	.area GSINIT4 (CODE)
                                    274 	.area GSINIT5 (CODE)
                                    275 	.area GSINIT  (CODE)
                                    276 	.area GSFINAL (CODE)
                                    277 	.area CSEG    (CODE)
                                    278 ;--------------------------------------------------------
                                    279 ; interrupt vector 
                                    280 ;--------------------------------------------------------
                                    281 	.area HOME    (CODE)
      000000                        282 __interrupt_vect:
      000000 02r00r00         [24]  283 	ljmp	__sdcc_gsinit_startup
      000003 02r00r00         [24]  284 	ljmp	_Key_INT0
      000006                        285 	.ds	5
      00000B 32               [24]  286 	reti
      00000C                        287 	.ds	7
      000013 02r00r0A         [24]  288 	ljmp	_Key_INT1
      000016                        289 	.ds	5
      00001B 32               [24]  290 	reti
      00001C                        291 	.ds	7
      000023 32               [24]  292 	reti
      000024                        293 	.ds	7
      00002B 32               [24]  294 	reti
      00002C                        295 	.ds	7
      000033 32               [24]  296 	reti
      000034                        297 	.ds	7
      00003B 32               [24]  298 	reti
      00003C                        299 	.ds	7
      000043 02r00r19         [24]  300 	ljmp	_Key_INT2
      000046                        301 	.ds	5
      00004B 02r00r28         [24]  302 	ljmp	_Key_INT3
                                    303 ;--------------------------------------------------------
                                    304 ; global & static initialisations
                                    305 ;--------------------------------------------------------
                                    306 	.area HOME    (CODE)
                                    307 	.area GSINIT  (CODE)
                                    308 	.area GSFINAL (CODE)
                                    309 	.area GSINIT  (CODE)
                                    310 	.globl __sdcc_gsinit_startup
                                    311 	.globl __sdcc_program_startup
                                    312 	.globl __start__stack
                                    313 	.globl __mcs51_genXINIT
                                    314 	.globl __mcs51_genXRAMCLEAR
                                    315 	.globl __mcs51_genRAMCLEAR
                                    316 	.area GSFINAL (CODE)
      000000 02r00r4E         [24]  317 	ljmp	__sdcc_program_startup
                                    318 ;--------------------------------------------------------
                                    319 ; Home
                                    320 ;--------------------------------------------------------
                                    321 	.area HOME    (CODE)
                                    322 	.area HOME    (CODE)
      00004E                        323 __sdcc_program_startup:
      00004E 02r00r37         [24]  324 	ljmp	_main
                                    325 ;	return from main will return to caller
                                    326 ;--------------------------------------------------------
                                    327 ; code
                                    328 ;--------------------------------------------------------
                                    329 	.area CSEG    (CODE)
                                    330 ;------------------------------------------------------------
                                    331 ;Allocation info for local variables in function 'Key_INT0'
                                    332 ;------------------------------------------------------------
                                    333 ;	interrupt.c:5: void Key_INT0(void) __interrupt(0) __using(1)
                                    334 ;	-----------------------------------------
                                    335 ;	 function Key_INT0
                                    336 ;	-----------------------------------------
      000000                        337 _Key_INT0:
                           00000F   338 	ar7 = 0x0f
                           00000E   339 	ar6 = 0x0e
                           00000D   340 	ar5 = 0x0d
                           00000C   341 	ar4 = 0x0c
                           00000B   342 	ar3 = 0x0b
                           00000A   343 	ar2 = 0x0a
                           000009   344 	ar1 = 0x09
                           000008   345 	ar0 = 0x08
      000000 C0 E0            [24]  346 	push	acc
                                    347 ;	interrupt.c:7: LED = ~LED;		// flip LEDs
      000002 E5 90            [12]  348 	mov	a,_P1
      000004 F4               [12]  349 	cpl	a
      000005 F5 90            [12]  350 	mov	_P1,a
                                    351 ;	interrupt.c:8: }
      000007 D0 E0            [24]  352 	pop	acc
      000009 32               [24]  353 	reti
                                    354 ;	eliminated unneeded mov psw,# (no regs used in bank)
                                    355 ;	eliminated unneeded push/pop psw
                                    356 ;	eliminated unneeded push/pop dpl
                                    357 ;	eliminated unneeded push/pop dph
                                    358 ;	eliminated unneeded push/pop b
                                    359 ;------------------------------------------------------------
                                    360 ;Allocation info for local variables in function 'Key_INT1'
                                    361 ;------------------------------------------------------------
                                    362 ;	interrupt.c:10: void Key_INT1(void) __interrupt(2) __using(1)
                                    363 ;	-----------------------------------------
                                    364 ;	 function Key_INT1
                                    365 ;	-----------------------------------------
      00000A                        366 _Key_INT1:
      00000A C0 D0            [24]  367 	push	psw
      00000C 75 D0 08         [24]  368 	mov	psw,#0x08
                                    369 ;	interrupt.c:12: LED ^= 0XF;		// flip LEDs
      00000F AE 90            [24]  370 	mov	r6,_P1
      000011 63 0E 0F         [24]  371 	xrl	ar6,#0x0f
      000014 8E 90            [24]  372 	mov	_P1,r6
                                    373 ;	interrupt.c:13: }
      000016 D0 D0            [24]  374 	pop	psw
      000018 32               [24]  375 	reti
                                    376 ;	eliminated unneeded push/pop dpl
                                    377 ;	eliminated unneeded push/pop dph
                                    378 ;	eliminated unneeded push/pop b
                                    379 ;	eliminated unneeded push/pop acc
                                    380 ;------------------------------------------------------------
                                    381 ;Allocation info for local variables in function 'Key_INT2'
                                    382 ;------------------------------------------------------------
                                    383 ;	interrupt.c:15: void Key_INT2(void) __interrupt(8) __using(1)
                                    384 ;	-----------------------------------------
                                    385 ;	 function Key_INT2
                                    386 ;	-----------------------------------------
      000019                        387 _Key_INT2:
      000019 C0 D0            [24]  388 	push	psw
      00001B 75 D0 08         [24]  389 	mov	psw,#0x08
                                    390 ;	interrupt.c:17: LED ^= 0X3;		// flip LEDs
      00001E AE 90            [24]  391 	mov	r6,_P1
      000020 63 0E 03         [24]  392 	xrl	ar6,#0x03
      000023 8E 90            [24]  393 	mov	_P1,r6
                                    394 ;	interrupt.c:18: }
      000025 D0 D0            [24]  395 	pop	psw
      000027 32               [24]  396 	reti
                                    397 ;	eliminated unneeded push/pop dpl
                                    398 ;	eliminated unneeded push/pop dph
                                    399 ;	eliminated unneeded push/pop b
                                    400 ;	eliminated unneeded push/pop acc
                                    401 ;------------------------------------------------------------
                                    402 ;Allocation info for local variables in function 'Key_INT3'
                                    403 ;------------------------------------------------------------
                                    404 ;	interrupt.c:20: void Key_INT3(void) __interrupt(9) __using(1)
                                    405 ;	-----------------------------------------
                                    406 ;	 function Key_INT3
                                    407 ;	-----------------------------------------
      000028                        408 _Key_INT3:
      000028 C0 D0            [24]  409 	push	psw
      00002A 75 D0 08         [24]  410 	mov	psw,#0x08
                                    411 ;	interrupt.c:22: LED ^= 0X1;		// flip LEDs
      00002D AE 90            [24]  412 	mov	r6,_P1
      00002F 63 0E 01         [24]  413 	xrl	ar6,#0x01
      000032 8E 90            [24]  414 	mov	_P1,r6
                                    415 ;	interrupt.c:23: }
      000034 D0 D0            [24]  416 	pop	psw
      000036 32               [24]  417 	reti
                                    418 ;	eliminated unneeded push/pop dpl
                                    419 ;	eliminated unneeded push/pop dph
                                    420 ;	eliminated unneeded push/pop b
                                    421 ;	eliminated unneeded push/pop acc
                                    422 ;------------------------------------------------------------
                                    423 ;Allocation info for local variables in function 'main'
                                    424 ;------------------------------------------------------------
                                    425 ;	interrupt.c:25: void main(void)
                                    426 ;	-----------------------------------------
                                    427 ;	 function main
                                    428 ;	-----------------------------------------
      000037                        429 _main:
                           000007   430 	ar7 = 0x07
                           000006   431 	ar6 = 0x06
                           000005   432 	ar5 = 0x05
                           000004   433 	ar4 = 0x04
                           000003   434 	ar3 = 0x03
                           000002   435 	ar2 = 0x02
                           000001   436 	ar1 = 0x01
                           000000   437 	ar0 = 0x00
                                    438 ;	interrupt.c:27: LED = 0xff;		// all LEDs off
      000037 75 90 FF         [24]  439 	mov	_P1,#0xff
                                    440 ;	interrupt.c:28: EA = 1;			// enable global interrupts
                                    441 ;	assignBit
      00003A D2 AF            [12]  442 	setb	_EA
                                    443 ;	interrupt.c:29: EX0 = 1;		// external interrupt 0 enabled
                                    444 ;	assignBit
      00003C D2 A8            [12]  445 	setb	_EX0
                                    446 ;	interrupt.c:30: IT0 = 0;		// level triggered
                                    447 ;	assignBit
      00003E C2 88            [12]  448 	clr	_IT0
                                    449 ;	interrupt.c:31: EX1 = 1;
                                    450 ;	assignBit
      000040 D2 AA            [12]  451 	setb	_EX1
                                    452 ;	interrupt.c:32: IT1 = 0;
                                    453 ;	assignBit
      000042 C2 8A            [12]  454 	clr	_IT1
                                    455 ;	interrupt.c:33: ET0 = 1;
                                    456 ;	assignBit
      000044 D2 A9            [12]  457 	setb	_ET0
                                    458 ;	interrupt.c:34: TF0 = 0;
                                    459 ;	assignBit
      000046 C2 8D            [12]  460 	clr	_TF0
                                    461 ;	interrupt.c:35: ET1 = 1;
                                    462 ;	assignBit
      000048 D2 AB            [12]  463 	setb	_ET1
                                    464 ;	interrupt.c:36: TF1 = 0;
                                    465 ;	assignBit
      00004A C2 8F            [12]  466 	clr	_TF1
                                    467 ;	interrupt.c:38: while (1);		// other work can be done concurrently here
      00004C                        468 00102$:
                                    469 ;	interrupt.c:39: }
      00004C 80 FE            [24]  470 	sjmp	00102$
                                    471 	.area CSEG    (CODE)
                                    472 	.area CONST   (CODE)
                                    473 	.area XINIT   (CODE)
                                    474 	.area CABS    (ABS,CODE)
